FROM maven:3.8.1-adoptopenjdk-11 AS build
COPY src /usr/src/app/src
COPY pom.xml /usr/src/app
RUN mvn -f /usr/src/app/pom.xml clean package

FROM adoptopenjdk:11-jre-hotspot
COPY --from=build /usr/src/app/target/demo-0.0.2-SNAPSHOT.jar /usr/app/demo-0.0.2-SNAPSHOT.jar
EXPOSE 8080
ENTRYPOINT ["java", "-jar", "/usr/app/demo-0.0.2-SNAPSHOT.jar"]

# Inspiration from https://stackoverflow.com/questions/27767264/how-to-dockerize-maven-project-and-how-many-ways-to-accomplish-it
#WORKDIR /app
#COPY pom.xml .
#RUN mvn clean package -Dmaven.test.skip -Dmaven.main.skip -Dspring-boot.repackage.skip && rm -r target/
#COPY src ./src
#RUN mvn clean package -Dmaven.test.skip
#RUN mkdir -p target/docker-packaging && cd target/docker-packaging && jar -xf ../demo*.jar
#
#FROM adoptopenjdk:11-jre-hotspot
#WORKDIR /app
#ARG DOCKER_PACKAGING_DIR=/app/target/docker-packaging
#COPY --from=build ${DOCKER_PACKAGING_DIR}/BOOT-INF/lib /app/lib
#COPY --from=build ${DOCKER_PACKAGING_DIR}/META-INF /app/META-INF
#EXPOSE 8080
#CMD java -cp .:classes:lib/* -Djava.security.egd=file:/dev/./urandom maven.com.example.demo.DemoApplication

#COPY src /usr/src/app/src
#COPY pom.xml /usr/src/app



#RUN mvn -f /usr/src/app/pom.xml clean package
#
#FROM adoptopenjdk:11-jre-hotspot
#WORKDIR /usr/src/main
#RUN Mav
#CMD
